str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(cars$speed,cars$dist)
plot(x = cars$dist, y = cars$speed)
plot(x = cars$speed, y = cars$dist)
plot(x = cars$speed, y = cars$dist, xlab="Speed")
plot(x = cars$speed, y = cars$dist, xlab="Speed", ylab="Stopping Distance")
plot(x = cars$speed, y = cars$dist, ylab="Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab="Speed", ylab="Stopping Distance")
plot(cars,main="My Plot")
plot(cars,sub="My Plot Subtitle")
play()
?par
nxt()
plot(cars,col=2)
plot(cars,xlim = c(10, 15))
plot(cars,pch = 2)
data(mtcars)
?boxplot
boxplot(mpg~cyl,data=mtcars)
hist(mtcars$mpg)
library(swirl)
swirl()
library(dplyr)
cran <- tbl_df(mydf)
rm(mydf)
rm("mydf")
print(cran)
cran
?group_by
by_package <- group_by(cran,package)
by_package
summarise(by_package.mean(size))
summarise(by_package,mean(size))
?n
?n_distinct
pack_sum <- summarize(by_package,
count = n(),
unique = n_distinct(ip_id),
countries = n_distinct(country),
avg_bytes = mean(size))
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
top_counts <- filter(pack_sum,count>679)
top_counts
View(top_counts)
top_counts_sorted <- arrange(top_counts,count)
top_counts_sorted <- arrange(top_counts,desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique, probs = 0.99)
top_unique <- filter(pack_sum,unique > 465)
View(top_unique)
top_unique_sorted <- arrange(top_unique,desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
submit()
submit()
submit()
submit()
submit()
submit()
library(tidyr)
students
?gather
gather(students,sex,count,-grade)
students2
res <- gather(students2,sex_class,count,-grade)
res
? separate
separate(res,sex_class,c(sex,class))
separate(res,sex_class,c("sex","class"))
submit()
students3
submit()
? spread
submit()
submit()
extract_numeric("class5")
submit()
students4
submit()
submit()
submit()
submit()
passed
failed
passed <- mutate(passed,status="passed")
failed <- mutate(failed,status="failed")
bind_rows(passed,failed)
sat
submit()
submit()
submit()
submit()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = lubridate)
this_day <- today()
this_day
month(this_day)
wday(this_day)
wday(this_day,label=TRUE)
this_moment <- now()
this_moment
second(this_moment)
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("1920-1-2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment <- update(this_moment,now())
this_moment %>% update %>% now
this_moment %>% update %>% now()
this_moment <- update(this_moment,hours = 10, minutes = 16, seconds = 0)
this_moment
nyc <- now(tzone="America/New_York")
nyc
depart <- nyc + days(2)
depart
depart <- update(depart,hours=17,minutes=34)
depart
arrive <- depart +hours(15)+minutes(50)
?with_tz
with_tz(arrive, tzone = "Asia/Hong_Kong")
arrive <- with_tz(arrive, tzone = "Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008",tz="Singapore")
last_time
?new_interval
how_long <- new_interval(last_time,arrive)
as.period(how_long)
stopwatch()
new <- gsub("? "," \\1",Byd eductivismI u nderstanad m odeo f explanatiown hich)
new <- gsub("? "," \\1","Byd eductivismI u nderstanad m odeo f explanatiown hich")
new
txt <- c("The", "licenses", "for", "most", "software", "are",
"designed", "to", "take", "away", "your", "freedom",
"to", "share", "and", "change", "it.",
"", "By", "contrast,", "the", "GNU", "General", "Public", "License",
"is", "intended", "to", "guarantee", "your", "freedom", "to",
"share", "and", "change", "free", "software", "--",
"to", "make", "sure", "the", "software", "is",
"free", "for", "all", "its", "users")
txt
(ot <- sub("[b-e]",".", txt))
txt[ot != gsub("[b-e]",".", txt)]#- gsub does "global" substitution
gsub("[b-e]",".", txt)
gsub("(\\w)(\\w*)", "\\U\\1\\L\\2", txt, perl=TRUE)
new <- gsub(". "," \\1","Byd eductivismI u nderstanad m odeo f explanatiown hich")
new
new <- gsub("[.] "," \\1","Byd eductivismI u nderstanad m odeo f explanatiown hich")
new
new <- gsub("(.) "," \\1","Byd eductivismI u nderstanad m odeo f explanatiown hich")
new
source('D:/D_documents/MOOC/Coursera/04 Exploratory Data Analysis/quiz2.R')
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
head(BodyWeight)
str(BodyWeight)
print.trellis()
trellis.par.set()
par()
library(datasets)
data(airquality)
str(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data = movies) + stats_smooth("loess")
qplot(votes, rating, data = movies, smooth = "loess")
library(swirl)
install_from_swirl("Exploratory Data Analysis")
install.packages("swirl")
library(swirl)
install_from_swirl("Exploratory Data Analysis")
install.packages("crayon")
library(swirl)
rm(list=ls())
install_from_swirl("Exploratory Data Analysis")
swirl()
install_from_swirl("Exploratory Data Analysis")
swirl()
install.packages("eurostatr")
install.packages("eurostat")
get_eurostat_toc()
library(eurostat)
get_eurostat_toc()
toc <- get_eurostat_toc()
write.csv(toc, "toc.csv")
bop <- get_eurostat_raw(bop_q_c)
get_eurostat_raw()
library(eurostat)
get_eurostat_dic(dictname)
bop <- get_eurostat(bop_q_c)
bop <- get_eurostat("bop_q_c")
dir.create("r_cache")
bop <- get_eurostat("bop_q_c", time_format = "date", cache = TRUE, update_cache = FALSE,cache_dir = "r_cache")
library(swirl)
seirl()
swirl()
(1/6)*1+(1/6)*2+(1/6)*3+(1/6)*4+(1/6)*5+(1/6)*6
expect_dice()
str(expect_dice())
View(expect_dice)
View(expect_dice)
expect_dice
dice_high
expect_dice(dice_high)
expect_dice(dice_low)
.5*(edh+edl)
integrate(myfunc,0,2
)
spop
mean(spop)
allsam
apply(allsam,1,mean)
mean(smeans)
series <- "11a9995e4d9f3832892751cf2ebe5f4c"
from <- "03/01/2000"
to <- "06/30/2015"
url <- paste0("http://www.federalreserve.gov/datadownload/Output.aspx?rel=Z1&series=",series,
"&lastObs=&from=",from,"&to=",to,"&filetype=csv&label=include&layout=seriesrow")
url
flow_names <- c("Private Expenditure","Government Expenditure on Goods", "Government Expenditure on Serices","Exports: agriculture", "Exports:computers", "Exports: Other Goods and Services", "Imports: Oil", "Imports: computers", "Exports: Other Goods and Services", "Memo: GDP")
col_template <- vector(mode = "numeric",length = length(flow_names))
a5 <- data.frame(inc_exp = col_template, Production = col_template, Financial = col_template, General_Government = col_template, Interest_Pool = col_template, Foreign = col_template)
a5
a5 <- data.frame(inc_exp = col_template, Production = col_template, Financial = col_template, General_Government = col_template, Interest_Pool = col_template, Foreign = col_template, row.names = flow_names)
flow_names <- c("Private Expenditure","Government Expenditure on Goods", "Government Expenditure on Serices","Exports: agriculture", "Exports:computers", "Exports: Other Goods and Services", "Imports: Oil", "Imports: computers", "Imports: Other Goods and Services", "Memo: GDP")
col_template <- vector(mode = "numeric",length = length(flow_names))
a5 <- data.frame(inc_exp = col_template, Production = col_template, Financial = col_template, General_Government = col_template, Interest_Pool = col_template, Foreign = col_template, row.names = flow_names)
a5
library("swirl")
swirl()
lm(child~parent,galton)
fit <- lm(child ~ parent, galton)
summary(fit)
mean(fit$residuals)
cov(fit$residuals, galton$parent)
ols.ic<-fit$coef[1]
ols.slope<-fit$coef[2]
rhs-lhs
lhs-rhs
all.equal(lhs,rhs)
varChild <- var(galton$child)
varRes<-vvar(fit$residuals)
varRes<-var(fit$residuals)
varEst<-var(est(ols.slope,ols.ic))
all.equal(varChild,sum(varRes,varEst))
all.equal(varChild,varRes+varEst)
efit <- lm(accel ~ mag+dist, attenu)
mean(efit$residuals)
cov(efit$residuals,attenu$mag)
cov(efit$residuals,attenu$dist)
help()
x<-c(0.18,-1.54,0.42,0.95)
w<-c(2,1,3,1)
sm<-x*w
sm
sm<-sum(sm)
sm
sm<-sm/4
sm
mean(x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(y~x)
data(mtcars)
lm(mpg~weight)
lm(mpg~weoght,mtcars)
lm(mpg~weight,mtcars)
lm(mpg~wt,mtcars)
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
mean(x)
sd(x)
(8.58-9.31)/0.7511325
setwd("D:/D_documents/00 PhD/Working Notes/006 Revisiting Godley99")
library(dplyr)
library(ggplot2)
# The gov't net saving values are in Z1 files S.7.a(A) and S.8.a(A), GDP is in S.1.a(A)
seriesCodes <- data.frame(S.1.a = "a28fd6ff58186c91e3e2987a889a772d",
S.7.a = "6edca435c2141aa8390b2a6854946677",
S.8.a = "6414b0705b484d2403bb0b1ef263072a",
S.9.a = "7ae4244e7d17dd16835f53f825485486",
f.105 = "848b989b9776e637e52f8b1a3a5b83a6")
get_file <- function(code){
url <- paste0("http://www.federalreserve.gov/datadownload/Output.aspx?rel=Z1&series=",
code,
"&lastObs=&from=01/01/1960&to=12/31/2015&filetype=csv&label=include&layout=seriesrow")
newfile <- read.csv (url, header = FALSE,stringsAsFactors = FALSE)
colnames(newfile) <- newfile[1,]
newfile <- rename(newfile, itemCode = `Series Name:`)
newfile <- select(newfile,-(2:5))[2:nrow(newfile),]
newfile
}
TotalEcon <- get_file(seriesCodes$S.1.a)
FedGov <- get_file(seriesCodes$S.7.a)
StateGov <- get_file(seriesCodes$S.8.a)
GenGov <- get_file(seriesCodes$f.105)
ROW <- get_file(seriesCodes$S.9.a)
Years <- colnames(select(ROW,`1960`:`2014`))
flow_names <- c("Private Expenditure","Government Expenditure", "Exports", "Imports", "Memo: GDP","chksum")
sector_names <- c("Inc_Exp", "Prod", "Fin", "Gov", "Int", "ROW")
Years <- 1960:2014
a5 <- array(0,dim=c(length(flow_names),length(sector_names),length(Years)),
dimnames = list(flow_names,sector_names,Years))
seriesCodes <- data.frame(S.1.a = "a28fd6ff58186c91e3e2987a889a772d",
S.3.a = "0a165246a24d5945b5826f137837ad0f",
S.4.a = "7f19a0b74241e71bd1b8248cb101a446",
S.5.a = "8bae818f5e889fe35e5c76b009a9d5d3",
S.6.a = "415394082169fa463349f584889afc8f",
S.7.a = "6edca435c2141aa8390b2a6854946677",
S.8.a = "6414b0705b484d2403bb0b1ef263072a",
S.9.a = "7ae4244e7d17dd16835f53f825485486",
f.105 = "848b989b9776e637e52f8b1a3a5b83a6")
get_file <- function(code){
url <- paste0("http://www.federalreserve.gov/datadownload/Output.aspx?rel=Z1&series=",
code,
"&lastObs=&from=01/01/1960&to=12/31/2015&filetype=csv&label=include&layout=seriesrow")
newfile <- read.csv (url, header = FALSE,stringsAsFactors = FALSE)
colnames(newfile) <- newfile[1,]
newfile <- rename(newfile, itemCode = `Series Name:`)
newfile <- select(newfile,-(2:5))[2:nrow(newfile),]
newfile
}
TotalEcon <- get_file(seriesCodes$S.1.a)
HH <- get_file(seriesCodes$S.3.a)
NFNC <- get_file(seriesCodes$S.4.a)
NFC <- get_file(seriesCodes$S.5.a)
FC <- get_file(seriesCodes$S.6.a)
FedGov <- get_file(seriesCodes$S.7.a)
StateGov <- get_file(seriesCodes$S.8.a)
GenGov <- get_file(seriesCodes$f.105)
grep("50509",HH$itemCode,value = TRUE)
unique(filter(HH,itemCode=grep("50509",HH$itemCode,value = TRUE)))
unique(filter(HH,itemCode==grep("50509",HH$itemCode,value = TRUE)))
ncf <- unique(filter(HH,itemCode==grep("50509",HH$itemCode,value = TRUE)))
ncf[,1:5]
ncf <- rbind(ncf,unique(filter(NFNC,itemCode==grep("50509",NFNC$itemCode,value = TRUE))))
grep("50509",NFNC$itemCode,value = TRUE)
unique(filter(NFNC,itemCode==grep("50509",NFNC$itemCode,value = TRUE)))
NFNC <- get_file(seriesCodes$S.4.a)
ncf <- rbind(ncf,unique(filter(NFNC,itemCode==grep("50509",NFNC$itemCode,value = TRUE))))
seriesCodes <- data.frame(S.1.a = "a28fd6ff58186c91e3e2987a889a772d",
S.3.a = "0a165246a24d5945b5826f137837ad0f",
S.4.a = "db842b5f3cf1d6f68ea309acd9f8ce26",
S.5.a = "8bae818f5e889fe35e5c76b009a9d5d3",
S.6.a = "415394082169fa463349f584889afc8f",
S.7.a = "6edca435c2141aa8390b2a6854946677",
S.8.a = "6414b0705b484d2403bb0b1ef263072a",
S.9.a = "7ae4244e7d17dd16835f53f825485486",
f.105 = "848b989b9776e637e52f8b1a3a5b83a6")
NFNC <- get_file(seriesCodes$S.4.a)
ncf <- rbind(ncf,unique(filter(NFNC,itemCode==grep("50509",NFNC$itemCode,value = TRUE))))
ncf <- rbind(ncf,unique(filter(NFC,itemCode==grep("50509",NFC$itemCode,value = TRUE))))
grep("50509",FC$itemCode,value = TRUE)
grep("50150",FC$itemCode,value = TRUE)
ncf <- rbind(ncf,unique(filter(FC,itemCode==grep("50150",FC$itemCode,value = TRUE))))
grep("63000",HH$itemCode,value = TRUE)
grep("63000",NFNC$itemCode,value = TRUE)
grep("63000",NFC$itemCode,value = TRUE)
grep("63000",FC$itemCode,value = TRUE)
cfc <- unique(filter(HH,itemCode==grep("63000",HH$itemCode,value = TRUE)))
cfc <- rbind(cfc,unique(filter(NFNC,itemCode==grep("63000",NFNC$itemCode,value = TRUE))))
cfc <- rbind(cfc,unique(filter(NFC,itemCode==grep("63000",NFC$itemCode,value = TRUE))))
cfc <- rbind(cfc,unique(filter(FC,itemCode==grep("63000",FC$itemCode,value = TRUE))))
cfc <- unique(filter(HH,itemCode==grep("63000",HH$itemCode,value = TRUE)))
unique(filter(NFNC,itemCode==grep("63000",NFNC$itemCode,value = TRUE)))
cfc <- unique(filter(HH,itemCode==grep("63000",HH$itemCode,value = TRUE)))
cfc <- rbind(cfc,unique(filter(NFNC,itemCode==grep("63000",NFNC$itemCode,value = TRUE))))
cfc <- rbind(cfc,unique(filter(NFC,itemCode==grep("63000",NFC$itemCode,value = TRUE))))
cfc <- rbind(cfc,unique(filter(FC,itemCode==grep("63000",FC$itemCode,value = TRUE))))
cfc+ncf
cfc[,3:57]+ncf[,3:57]
inv <- select(cfc,`1960`:`2014`)+select(ncf,`1960`:`2014`)
pvt_cons <- unique(filter(HH,itemCode==grep("69010",HH$itemCode,value = TRUE)))
PX <- select(pvt_cons,`1960`:`2014`) + inv
select(pvt_cons,`1960`:`2014`)
length(select(pvt_cons,`1960`:`2014`))
PX <- select(pvt_cons,`1960`:`2014`) + inv
PX <- as.numeric(select(pvt_cons,`1960`:`2014`)) + as.numeric(inv)
inv <- colsums(select(cfc,`1960`:`2014`)+select(ncf,`1960`:`2014`))
inv <- colSums(select(cfc,`1960`:`2014`)+select(ncf,`1960`:`2014`))
PX <- as.numeric(select(pvt_cons,`1960`:`2014`)) + inv
for(y in 1:length(Years)){
a5["Private Expenditure",c("Inc_Exp","Prod"),y] <- c(-PX[y],PX[y])
}
grep("50509",GenGov$itemCode,value = TRUE)
grep("50509",FedGov$itemCode,value = TRUE)
grep("50509",StateGov$itemCode,value = TRUE)
grep("63000",GenGov$itemCode,value = TRUE)
gov_cons <- unique(filter(GenGov,itemCode==grep("69010",GenGov$itemCode,value = TRUE)))
# public sector gross investment
#   50509	 Capital formation, net for sectors 31 (FedGov), 20 (StateGov)
gov_ncf <- unique(filter(FedGov,itemCode==grep("50509",FedGov$itemCode,value = TRUE)))
gov_ncf <- rbind(ncf,unique(filter(StateGov,itemCode==grep("50509",StateGov$itemCode,value = TRUE))))
#   63000	 Consumption of fixed capital for sectors 36 (GenGov)
gov_cfc <- unique(filter(GenGov,itemCode==grep("63000",GenGov$itemCode,value = TRUE)))
gov_cons <- unique(filter(GenGov,itemCode==grep("69010",GenGov$itemCode,value = TRUE)))
# public sector gross investment
#   50509	 Capital formation, net for sectors 31 (FedGov), 20 (StateGov)
gov_ncf <- unique(filter(FedGov,itemCode==grep("50509",FedGov$itemCode,value = TRUE)))
gov_ncf <- rbind(gov_ncf,unique(filter(StateGov,itemCode==grep("50509",StateGov$itemCode,value = TRUE))))
#   63000	 Consumption of fixed capital for sectors 36 (GenGov)
gov_cfc <- unique(filter(GenGov,itemCode==grep("63000",GenGov$itemCode,value = TRUE)))
gov_inv <- colSums(select(gov_cfc,`1960`:`2014`) + select(gov_ncf,`1960`:`2014`))
gov_inv <- colSums(select(gov_ncf,`1960`:`2014`) + select(gov_cfc,`1960`:`2014`))
colSums(select(gov_ncf,`1960`:`2014`)
)
gov_inv <- colSums(select(gov_ncf,`1960`:`2014`)) + select(gov_cfc,`1960`:`2014`)
gov <- as.numeric(select(gov_cons,`1960`:`2014`)) + gov_inv
gov <- as.numeric(select(gov_cons,`1960`:`2014`)) + as.numeric(gov_inv)
for(y in 1:length(Years)){
a5["Government Expenditure",c("Prod","Gov"),y] <- c(gov[y],-gov[y])
}
PX <- (as.numeric(select(pvt_cons,`1960`:`2014`)) + inv) / 1000
for(y in 1:length(Years)){
a5["Private Expenditure",c("Inc_Exp","Prod"),y] <- c(-PX[y],PX[y])
}
gov <- (as.numeric(select(gov_cons,`1960`:`2014`)) + as.numeric(gov_inv)) / 1000
for(y in 1:length(Years)){
a5["Government Expenditure",c("Prod","Gov"),y] <- c(gov[y],-gov[y])
}
GDP <- unique(filter(TotalEcon, itemCode == "FA896902505.A"))
grep("70059",TotalEcon$itemCode,value = TRUE)
stat_disc <- unique(filter(TotalEcon,itemCode==grep("70059",TotalEcon$itemCode,value = TRUE)))
gdp <- as.numeric(select(GDP,`1960`:`2014`)) / (1000)
stat_disc <- as.numeric(select(stat_disc,`1960`:`2014`)) / (1000)
flow_names <- c("Private Expenditure","Government Expenditure", "Exports", "Imports","Stat Disc", "Memo: GDP")
sector_names <- c("Inc_Exp", "Prod", "Fin", "Gov", "Int", "ROW")
Years <- 1960:2014
a5 <- array(0,dim=c(length(flow_names),length(sector_names),length(Years)),
dimnames = list(flow_names,sector_names,Years))
for(y in 1:length(Years)){
a5["Private Expenditure",c("Inc_Exp","Prod"),y] <- c(-PX[y],PX[y])
}
for(y in 1:length(Years)){
a5["Government Expenditure",c("Prod","Gov"),y] <- c(gov[y],-gov[y])
}
for(y in 1:length(Years)){
a5["Exports",c("Prod","ROW"),y] <- c(exp[y],-exp[y])
}
for(y in 1:length(Years)){
a5["Imports",c("Prod","ROW"),y] <- c(-imp[y],imp[y])
}
gdp <- as.numeric(select(GDP,`1960`:`2014`)) / (1000)
# GDP figure on income basis, need to apply the statistical discrepancy to convert to expenditure basis
# The statistical discrepancy is FA087005995 in file TotalEcon
stat_disc <- unique(filter(TotalEcon,itemCode==grep("70059",TotalEcon$itemCode,value = TRUE)))
stat_disc <- as.numeric(select(stat_disc,`1960`:`2014`)) / (1000)
# assign gdp to column "Prod"
for(y in 1:length(Years)){
a5["Stat Disc","Prod",y] <- -stat_disc[y]
a5["Memo: GDP","Prod",y] <- gdp[y]
}
a5[,,"2014"]
exp <- unique(filter(ROW,itemCode=="FA266903011.A"))
exp <- as.numeric(select(exp,`1960`:`2014`)) / (1000)
for(y in 1:length(Years)){
a5["Exports",c("Prod","ROW"),y] <- c(exp[y],-exp[y])
}
####### imports
imp <- unique(filter(ROW,itemCode=="FA266903001.A"))
imp <- as.numeric(select(imp,`1960`:`2014`)) / (1000)
for(y in 1:length(Years)){
a5["Imports",c("Prod","ROW"),y] <- c(-imp[y],imp[y])
}
a5[,,"2014"]
a5[,"Prod Fin","2014"]
a5[,"Prod","2014"]
sum(a5[,"Prod","2014"])
sum(a5[,"Prod","2014"])/2
14718.763+3159.324+2341.933 -2871.928+212.038
