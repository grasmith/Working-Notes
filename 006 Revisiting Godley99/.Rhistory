.libPaths()
setwd("D:/D_documents/00 PhD/Working Notes/006 Revisiting Godley99")
install.packages("dynlm",repos = "https://cran.r-project.org/src/contrib/dynlm_0.3-3.tar.gz")
install.packages("dynlm",repos = "C:\Users\graeme\Documents\R\dynlm_0.3-3.tar")
install.packages("dynlm",repos = "C:/Users/graeme/Documents/R/dynlm_0.3-3.tar")
"adf" <- function(x,k = 0, int = TRUE, trend = FALSE){
# NB:  returns conventional lm summary so p-values for adf test are wrong!
require(dynlm)
dx <- diff(x)
formula <- paste("dx ~ L(x)")
if(k > 0)
formula <- paste(formula," + L(dx,1:k)")
if(trend){
s <- time(x)
t <- ts(s - s[1],start = s[1],freq = frequency(x))
formula <- paste(formula," + t")
}
if(!int) formula <- paste(formula," - 1")
summary(dynlm(as.formula(formula)))
}
library(dplyr)
library(ggplot2)
library(lubridate)
# The gov't net saving values are in Z1 files S.7.a(A) and S.8.a(A), GDP is in S.1.a(A)
seriesCodes <- data.frame(S.1.a = "a28fd6ff58186c91e3e2987a889a772d",
S.3.a = "0a165246a24d5945b5826f137837ad0f",
S.4.a = "db842b5f3cf1d6f68ea309acd9f8ce26",
S.5.a = "8bae818f5e889fe35e5c76b009a9d5d3",
S.6.a = "415394082169fa463349f584889afc8f",
S.7.a = "6edca435c2141aa8390b2a6854946677",
S.8.a = "6414b0705b484d2403bb0b1ef263072a",
S.9.a = "7ae4244e7d17dd16835f53f825485486",
f.105 = "848b989b9776e637e52f8b1a3a5b83a6")
get_file <- function(code){
url <- paste0("http://www.federalreserve.gov/datadownload/Output.aspx?rel=Z1&series=",
code,
"&lastObs=&from=01/01/1960&to=12/31/2015&filetype=csv&label=include&layout=seriesrow")
newfile <- read.csv (url, header = FALSE,stringsAsFactors = FALSE)
colnames(newfile) <- newfile[1,]
newfile <- rename(newfile, itemCode = `Series Name:`)
newfile <- select(newfile,-(2:5))[2:nrow(newfile),]
newfile
}
TotalEcon <- get_file(seriesCodes$S.1.a)
HH <- get_file(seriesCodes$S.3.a)
NFNC <- get_file(seriesCodes$S.4.a)
NFC <- get_file(seriesCodes$S.5.a)
FC <- get_file(seriesCodes$S.6.a)
FedGov <- get_file(seriesCodes$S.7.a)
StateGov <- get_file(seriesCodes$S.8.a)
GenGov <- get_file(seriesCodes$f.105)
ROW <- get_file(seriesCodes$S.9.a)
Years <- colnames(select(ROW,`1960`:`2014`))
GDP <- unique(filter(TotalEcon, itemCode == "FA896902505.A"))
gdp_flow_names <- c("Private Expenditure","Government Expenditure", "Exports",
"Imports","Stat Disc","Memo: GDP")
pdi_flow_names <- c("Net Indirect Taxes","Total Factor Income","Property Income",
"Direct Tax","Net Transfers","Memo:Private Disposable Income")
fof_flow_names <- c("Net Lending/Borrowing","Net Lending to Pvt Sector","Other Change in Fin Assets")
flow_names <- c(gdp_flow_names, pdi_flow_names,fof_flow_names,"Sectoral Fin Balances")
sector_names <- c("Inc_Exp", "Prod", "Fin", "Gov", "ROW", "Sum")
Years <- 1960:2014
a5 <- array(0,dim=c(length(flow_names),length(sector_names),length(Years)),
dimnames = list(flow_names,sector_names,Years))
### load the series from the Z1 xml file
series <- read.csv("Series.csv",check.names = FALSE,stringsAsFactors = FALSE)
# eliminate index column and convert to $B
series <- series[2:ncol(series)]
series[,6:ncol(series)] <- series[,6:ncol(series)] / 1000
####### private expenditure
# private sector final consumption FA156901001
pvt_cons <- unique(filter(HH,itemCode==grep("69010",HH$itemCode,value = TRUE)))
# private sector gross investment
#   50509	 Capital formation, net for sectors 15 (HH), 10 (NFNC), 11 (NFC), 79 (FC) (FS code is 50150)
ncf <- unique(filter(HH,itemCode==grep("50509",HH$itemCode,value = TRUE)))
ncf <- rbind(ncf,unique(filter(NFNC,itemCode==grep("50509",NFNC$itemCode,value = TRUE))))
ncf <- rbind(ncf,unique(filter(NFC,itemCode==grep("50509",NFC$itemCode,value = TRUE))))
ncf <- rbind(ncf,unique(filter(FC,itemCode==grep("50150",FC$itemCode,value = TRUE))))
#   63000	 Consumption of fixed capital
cfc <- unique(filter(HH,itemCode==grep("63000",HH$itemCode,value = TRUE)))
cfc <- rbind(cfc,unique(filter(NFNC,itemCode==unique(grep("63000",NFNC$itemCode,value = TRUE)))))
cfc <- rbind(cfc,unique(filter(NFC,itemCode==unique(grep("63000",NFC$itemCode,value = TRUE)))))
cfc <- rbind(cfc,unique(filter(FC,itemCode==unique(grep("63000",FC$itemCode,value = TRUE)))))
# Total Gross Investment is net capital formation (ncf) + cons of fixed cap (cfc)
inv <- colSums(select(cfc,`1960`:`2014`)+select(ncf,`1960`:`2014`))
# PX is pvt_cons + inv
PX <- (as.numeric(select(pvt_cons,`1960`:`2014`)) + inv) / 1000
for(y in 1:length(Years)){
a5["Private Expenditure",c("Inc_Exp","Prod"),y] <- c(-PX[y],PX[y])
}
####### government expenditure
# public sector final consumption FA366901005.A
gov_cons <- unique(filter(GenGov,itemCode==grep("69010",GenGov$itemCode,value = TRUE)))
# public sector gross investment
#   50509	 Capital formation, net for sectors 31 (FedGov), 20 (StateGov)
gov_ncf <- unique(filter(FedGov,itemCode==grep("50509",FedGov$itemCode,value = TRUE)))
gov_ncf <- rbind(gov_ncf,unique(filter(StateGov,itemCode==grep("50509",StateGov$itemCode,value = TRUE))))
#   63000	 Consumption of fixed capital for sectors 36 (GenGov)
gov_cfc <- unique(filter(GenGov,itemCode==grep("63000",GenGov$itemCode,value = TRUE)))
gov_inv <- colSums(select(gov_ncf,`1960`:`2014`)) + select(gov_cfc,`1960`:`2014`)
gov <- (as.numeric(select(gov_cons,`1960`:`2014`)) + as.numeric(gov_inv)) / 1000
for(y in 1:length(Years)){
a5["Government Expenditure",c("Prod","Gov"),y] <- c(gov[y],-gov[y])
}
####### exports
exp <- unique(filter(ROW,itemCode=="FA266903011.A"))
exp <- as.numeric(select(exp,`1960`:`2014`)) / (1000)
for(y in 1:length(Years)){
a5["Exports",c("Prod","ROW"),y] <- c(exp[y],-exp[y])
}
####### imports
imp <- unique(filter(ROW,itemCode=="FA266903001.A"))
imp <- as.numeric(select(imp,`1960`:`2014`)) / (1000)
for(y in 1:length(Years)){
a5["Imports",c("Prod","ROW"),y] <- c(-imp[y],imp[y])
}
####### GDP
# take GDP for all sectors
gdp <- as.numeric(select(GDP,`1960`:`2014`)) / (1000)
# GDP figure on income basis, need to apply the statistical discrepancy to convert to expenditure basis
# The statistical discrepancy is FA087005995 in file TotalEcon
stat_disc <- unique(filter(TotalEcon,itemCode==grep("70059",TotalEcon$itemCode,value = TRUE)))
stat_disc <- as.numeric(select(stat_disc,`1960`:`2014`)) / (1000)
# assign gdp to column "Prod"
for(y in 1:length(Years)){
a5["Stat Disc","Prod",y] <- -stat_disc[y]
a5["Memo: GDP","Prod",y] <- gdp[y]
}
#   calculate the sector balances and populate the summation column
sfb <- colSums(a5[flow_names[which(!grepl("Memo:",flow_names))],,])
for(y in 1:length(Years)){
a5["Sectoral Financial Balances",,y] <- sfb[,y]
a5[,"Sum",y] <- rowSums(a5[,,y])
}
gdp_flow_names <- c("Private Expenditure","Government Expenditure", "Exports",
"Imports","Stat Disc","Memo: GDP")
pdi_flow_names <- c("Net Indirect Taxes","Total Factor Income","Property Income",
"Direct Tax","Net Transfers","Memo:Private Disposable Income")
fof_flow_names <- c("Net Lending/Borrowing","Net Lending to Pvt Sector","Other Change in Fin Assets")
flow_names <- c(gdp_flow_names, pdi_flow_names,fof_flow_names,"Sectoral Fin Balances")
sector_names <- c("Inc_Exp", "Prod", "Fin", "Gov", "ROW", "Sum")
Years <- 1960:2014
a5 <- array(0,dim=c(length(flow_names),length(sector_names),length(Years)),
dimnames = list(flow_names,sector_names,Years))
### load the series from the Z1 xml file
series <- read.csv("Series.csv",check.names = FALSE,stringsAsFactors = FALSE)
# eliminate index column and convert to $B
series <- series[2:ncol(series)]
series[,6:ncol(series)] <- series[,6:ncol(series)] / 1000
####### private expenditure
# private sector final consumption FA156901001
pvt_cons <- unique(filter(HH,itemCode==grep("69010",HH$itemCode,value = TRUE)))
# private sector gross investment
#   50509	 Capital formation, net for sectors 15 (HH), 10 (NFNC), 11 (NFC), 79 (FC) (FS code is 50150)
ncf <- unique(filter(HH,itemCode==grep("50509",HH$itemCode,value = TRUE)))
ncf <- rbind(ncf,unique(filter(NFNC,itemCode==grep("50509",NFNC$itemCode,value = TRUE))))
ncf <- rbind(ncf,unique(filter(NFC,itemCode==grep("50509",NFC$itemCode,value = TRUE))))
ncf <- rbind(ncf,unique(filter(FC,itemCode==grep("50150",FC$itemCode,value = TRUE))))
#   63000	 Consumption of fixed capital
cfc <- unique(filter(HH,itemCode==grep("63000",HH$itemCode,value = TRUE)))
cfc <- rbind(cfc,unique(filter(NFNC,itemCode==unique(grep("63000",NFNC$itemCode,value = TRUE)))))
cfc <- rbind(cfc,unique(filter(NFC,itemCode==unique(grep("63000",NFC$itemCode,value = TRUE)))))
cfc <- rbind(cfc,unique(filter(FC,itemCode==unique(grep("63000",FC$itemCode,value = TRUE)))))
# Total Gross Investment is net capital formation (ncf) + cons of fixed cap (cfc)
inv <- colSums(select(cfc,`1960`:`2014`)+select(ncf,`1960`:`2014`))
# PX is pvt_cons + inv
PX <- (as.numeric(select(pvt_cons,`1960`:`2014`)) + inv) / 1000
for(y in 1:length(Years)){
a5["Private Expenditure",c("Inc_Exp","Prod"),y] <- c(-PX[y],PX[y])
}
####### government expenditure
# public sector final consumption FA366901005.A
gov_cons <- unique(filter(GenGov,itemCode==grep("69010",GenGov$itemCode,value = TRUE)))
# public sector gross investment
#   50509	 Capital formation, net for sectors 31 (FedGov), 20 (StateGov)
gov_ncf <- unique(filter(FedGov,itemCode==grep("50509",FedGov$itemCode,value = TRUE)))
gov_ncf <- rbind(gov_ncf,unique(filter(StateGov,itemCode==grep("50509",StateGov$itemCode,value = TRUE))))
#   63000	 Consumption of fixed capital for sectors 36 (GenGov)
gov_cfc <- unique(filter(GenGov,itemCode==grep("63000",GenGov$itemCode,value = TRUE)))
gov_inv <- colSums(select(gov_ncf,`1960`:`2014`)) + select(gov_cfc,`1960`:`2014`)
gov <- (as.numeric(select(gov_cons,`1960`:`2014`)) + as.numeric(gov_inv)) / 1000
for(y in 1:length(Years)){
a5["Government Expenditure",c("Prod","Gov"),y] <- c(gov[y],-gov[y])
}
####### exports
exp <- unique(filter(ROW,itemCode=="FA266903011.A"))
exp <- as.numeric(select(exp,`1960`:`2014`)) / (1000)
for(y in 1:length(Years)){
a5["Exports",c("Prod","ROW"),y] <- c(exp[y],-exp[y])
}
####### imports
imp <- unique(filter(ROW,itemCode=="FA266903001.A"))
imp <- as.numeric(select(imp,`1960`:`2014`)) / (1000)
for(y in 1:length(Years)){
a5["Imports",c("Prod","ROW"),y] <- c(-imp[y],imp[y])
}
####### GDP
# take GDP for all sectors
gdp <- as.numeric(select(GDP,`1960`:`2014`)) / (1000)
# GDP figure on income basis, need to apply the statistical discrepancy to convert to expenditure basis
# The statistical discrepancy is FA087005995 in file TotalEcon
stat_disc <- unique(filter(TotalEcon,itemCode==grep("70059",TotalEcon$itemCode,value = TRUE)))
stat_disc <- as.numeric(select(stat_disc,`1960`:`2014`)) / (1000)
# assign gdp to column "Prod"
for(y in 1:length(Years)){
a5["Stat Disc","Prod",y] <- -stat_disc[y]
a5["Memo: GDP","Prod",y] <- gdp[y]
}
#   calculate the sector balances and populate the summation column
sfb <- colSums(a5[flow_names[which(!grepl("Memo:",flow_names))],,])
for(y in 1:length(Years)){
a5["Sectoral Fin Balances",,y] <- sfb[,y]
a5[,"Sum",y] <- rowSums(a5[,,y])
}
nit <- rbind(unique(filter(TotalEcon,itemCode==grep("62400",TotalEcon$itemCode,value = TRUE))),
unique(filter(TotalEcon,itemCode==grep("64020",TotalEcon$itemCode,value = TRUE))))
nit <- as.numeric(colSums(select(nit,`1960`:`2014`)) / (1000))
for(y in 1:length(Years)){
a5["Net Indirect Taxes",c("Prod","Gov"),y] <- c(-nit[y],nit[y])
}
####### Total Factor Income: take data from TotalEcon file and place into Inc/Exp column
#    ! In the Nat Accs, TFI doesn't include CFC! Add it into tfi to achieve balance
#    FA896402101.A Net Operating Surplus
#    FA156025105.A Compensation of Employees received
#    FA896025001.A Compensation of employees paid
#    so factor income paid (fip) is NOS + FA896025001, factor income rec'd (fir) is NOS + FA156025105
#    net factor income to/from ROW is the difference
nos_cfc <- rbind(unique(filter(TotalEcon,itemCode==grep("64021",TotalEcon$itemCode,value = TRUE))),
unique(filter(TotalEcon,itemCode==grep("63000",TotalEcon$itemCode,value = TRUE))))
fir <- rbind(nos_cfc,
unique(filter(TotalEcon,itemCode==grep("60251",TotalEcon$itemCode,value = TRUE))))
fir <- as.numeric(colSums(select(fir,`1960`:`2014`)) / (1000))
fip <- rbind(nos_cfc,
unique(filter(TotalEcon,itemCode==grep("60250",TotalEcon$itemCode,value = TRUE))))
fip <- as.numeric(colSums(select(fip,`1960`:`2014`)) / (1000))
fi_row <- fip - fir
for(y in 1:length(Years)){
a5["Total Factor Income",c("Inc_Exp","Prod","ROW"),y] <- c(fir[y],-fip[y],fi_row[y])
}
####### Property Income: take data from TotalEcon file and place into Inc/Exp column
#    FA896150105    Property income (received)
#    FA896150005    Property income (paid)
#    Treat net property income as inc/exp the offset being to/from ROW
pir <- unique(filter(TotalEcon,itemCode==grep("61501",TotalEcon$itemCode,value = TRUE)))
pir <- as.numeric(select(pir,`1960`:`2014`)) / 1000
pip <- unique(filter(TotalEcon,itemCode==grep("61500",TotalEcon$itemCode,value = TRUE)))
pip <- as.numeric(select(pip,`1960`:`2014`)) / 1000
net_pi <- pir -pip
pi_row <- -net_pi
for(y in 1:length(Years)){
a5["Property Income",c("Inc_Exp","ROW"),y] <- c(net_pi[y],pi_row[y])
}
####### Check that Property income abroad + factor income abroad = Net foreign income
#   FA266904095 Income receipts from the rest of the world
#   FA266904195 Income payments to the rest of the world
nfi <- rbind(unique(filter(TotalEcon,itemCode==grep("69040",TotalEcon$itemCode,value = TRUE))),
unique(filter(TotalEcon,itemCode==grep("69041",TotalEcon$itemCode,value = TRUE))))
nfi <- as.numeric(colSums(select(nfi,`1960`:`2014`)) / 1000)
chk <- (nfi - pi_row - fi_row)
####### Direct Taxes: take data from TotalEcon file and place into Inc/Exp column
#   FA896220001 Received by Gov'
#   FA896220005 Paid by domestic sector
#   difference is net tax paid abroad
txrc <- unique(filter(TotalEcon,itemCode==grep("6220001",TotalEcon$itemCode,value = TRUE)))
txrc <- as.numeric(select(txrc,`1960`:`2014`)) / 1000
txpd <- unique(filter(TotalEcon,itemCode==grep("6220005",TotalEcon$itemCode,value = TRUE)))
txpd <- as.numeric(select(txpd,`1960`:`2014`)) / 1000
txrow <- txpd - txrc
for(y in 1:length(Years)){
a5["Direct Tax",c("Inc_Exp","Gov","ROW"),y] <- c(-txpd[y],txrc[y],txrow[y])
}
####### Net Foreign and Domestic Transfers:
#   Transfers paid by gov't
#       FA366601005.Q contributions for government social insurance received 1164.1
#       FA366403105.Q other current transfers received 702.1
#       FA366404005.Q social contributions paid 2506.6
#       FA366403005.Q other current transfers paid 547.2
recpt <- unique(filter(GenGov,itemCode %in% c("FA366601005.A","FA366403105.A")))
pmt <- unique(filter(GenGov,itemCode %in% c("FA366404005.A","FA366403005.A")))
gvtfr <- as.numeric(colSums(select(recpt,`1960`:`2014`)) -
colSums(select(pmt,`1960`:`2014`))) / (1000)
#   Foreign Transfers: difference between total tax and transfers abroad and taxes to/from ROW (txrow)
#       FA266400201 Current taxes and trans. receipts from rest of world
#       FA266400101 Current taxes and trans. payments to rest of world
ftfr <- as.numeric(((select(unique(filter(ROW,itemCode=="FA266400101.A")),`1960`:`2014`) -
select(unique(filter(ROW,itemCode=="FA266400201.A")),`1960`:`2014`)) / 1000)) - txrow
#   Transfers received by private sector is difference between that paid by gov't and paid to ROW
pvtfr <- -gvtfr - ftfr
for(y in 1:length(Years)){
a5["Net Transfers",c("Inc_Exp","Gov","ROW"),y] <- c(pvtfr[y],gvtfr[y],ftfr[y])
}
####### Private Disposable Income:
#   Total the income entries in the inc/exp column
for(y in 1:length(Years)){
a5["Memo:Private Disposable Income","Inc_Exp",y] <-
sum(a5[pdi_flow_names[which(!grepl("Memo:",pdi_flow_names))],"Inc_Exp",y])
}
##### NLB on capital account (S - I)
# HH FA155000905, NFC FA105000905, NFNC FA115000905, FS FA795000995.A, GGov FA365000905.A, ROW FA265000905
pvt_nlb_codes <- c("FA105000905.A","FA115000905.A","FA155000905.A")
pvt_nlb <- as.numeric(colSums(select(filter(series,code %in% pvt_nlb_codes),`1960`:`2014`)))
fs_nlb <- as.numeric(select(filter(series,code == "FA795000995.A"),`1960`:`2014`))
gov_nlb <- as.numeric(select(filter(series,code == "FA365000905.A"),`1960`:`2014`))
row_nlb <- as.numeric(select(filter(series,code == "FA265000905.A"),`1960`:`2014`))
for(y in 1:length(Years)){
a5["Net Lending/Borrowing",c("Inc_Exp","Fin","Gov","ROW"),y] <-
c(pvt_nlb[y],fs_nlb[y],gov_nlb[y],row_nlb[y])
}
####### Net Lending to Private Sector
# Private Sector: Total Loans as assets  FA**4023005 for sectors 15, 10, 11
pvt_loan_asset <- c("FA104035005.A","FA114023005.A","FA154023005.A")
# Private Sector: Total Loans as liabilities FA**4123005 for sectors 15, 10, 11
pvt_loan_liab <- c("FA104123005.A","FA114123005.A","FA154123005.A")
pvt_Loan_assets <- colSums(select(filter(series,code %in% pvt_loan_asset),`1960`:`2014`))
pvt_Loan_liabs <-  colSums(select(filter(series,code %in% pvt_loan_liab),`1960`:`2014`))
pvt_netLoans <- as.numeric(pvt_Loan_assets - pvt_Loan_liabs)
# Financial Sector: loan assets FA794035005; loan liabilities FA794135005
fs_netLoans <- as.numeric(select(filter(series,code == "FA794035005.A"),`1960`:`2014`) -
select(filter(series,code == "FA794135005.A"),`1960`:`2014`))
# Govt lending (asset) is FA364023005 - FA364123005
gov_netLoans <- as.numeric(select(filter(series,code == "FA364023005.A"),`1960`:`2014`) -
select(filter(series,code == "FA364123005.A"),`1960`:`2014`))
for(y in 1:length(Years)){
a5["Net Lending to Pvt Sector",c("Inc_Exp","Fin","Gov"),y] <-
c(pvt_netLoans[y],fs_netLoans[y],gov_netLoans[y])
}
##### Net change in financial assets (excl loans)
# NAFA      FA154090005.A FA104090005.A FA114090005.A FA794090005.A FA364090005.A FA264090005.A
# NIL       FA154190005.A FA104190005.A FA114190005.A FA794190005.A FA364190005.A FA264190005.A
# Statistical Discrepancy FU157005045 FU107005045 FU797005045 FU367005045 FU267005005
pvt_nafa_codes <- c("FA154090005.A","FA104090005.A","FA114090005.A","FU157005045.A","FU107005045.A","FU117005045.A")
pvt_nil_codes <- c("FA154190005.A","FA104190005.A","FA114190005.A")
pvt_nafa <- colSums(select(filter(series,code %in% pvt_nafa_codes),`1960`:`2014`))
pvt_nil <-  colSums(select(filter(series,code %in% pvt_nil_codes),`1960`:`2014`))
pvt_net_FA <- as.numeric(pvt_nafa - pvt_nil) - pvt_netLoans
# fin sector
fs_net_FA <- as.numeric(colSums(select(filter(series,code %in% c("FA794090005.A","FU797005045.A")),`1960`:`2014`)) -
select(filter(series,code == "FA794190005.A"),`1960`:`2014`)) - fs_netLoans
gov_net_FA <- as.numeric(colSums(select(filter(series,code %in% c("FA364090005.A","FU367005045.A")),`1960`:`2014`)) -
select(filter(series,code == "FA364190005.A"),`1960`:`2014`)) - gov_netLoans
row_net_FA <- as.numeric(colSums(select(filter(series,code %in% c("FA264090005.A","FU267005005.A")),`1960`:`2014`)) -
select(filter(series,code == "FA264190005.A"),`1960`:`2014`))
for(y in 1:length(Years)){
a5["Other Change in Fin Assets",c("Inc_Exp","Fin","Gov","ROW"),y] <-
c(pvt_net_FA[y],fs_net_FA[y],gov_net_FA[y],row_net_FA[y])
}
#####   re-calculate the sector balances and populate the summation column
a5["Sectoral Fin Balances",,] <- 0
a5[,"Sum",] <- 0
sfb <- colSums(a5[flow_names[which(!grepl("Memo:",flow_names))],,])
for(y in 1:length(Years)){
a5["Sectoral Fin Balances",,y] <- sfb[,y]
a5[,"Sum",y] <- round(rowSums(a5[,,y]),3)
}
a5[flow_names,,"2014"]
setwd("D:/D_documents/00 PhD/Working Notes/006 Revisiting Godley99")
write.csv(PX,"PX.csv")
Pex <- ts(PX)
write.csv(Pex,"Pex.csv")
PDI <- ts(a5["Memo:Private Disposable Income","Inc_Exp",])
NL <- ts(a5["Net Lending to Pvt Sector","Inc_Exp",])
df <- data.frame(Pex=Pex)
df
df <- data.frame(Pex=Pex,PDI=PDI,NL=NL)
df
df <- data.frame(Pex=Pex,PDI=PDI,NL=-NL)
df
write.csv(df,"df.csv")
library(dplyr)
library(ggplot2)
library(h2o)
localH2o = h2o.init(ip = "127.0.0.1", port = 54321)
filePath = "~/FLbigdataStats/bank_customer_data.csv"
market_data <- h2o.uploadFile(filePath,
destination_frame = "",
parse = T,
header = T,
sep = ",",
na.strings = c("unknown"),
progressBar = FALSE,
parse_type = "CSV")
filePath = "D:/D_documents/MOOC/Future Learn/ Data - Statistical Inference and Machine Learning/bank_customer_data.csv"
market_data <- h2o.uploadFile(filePath,
destination_frame = "",
parse = T,
header = T,
sep = ",",
na.strings = c("unknown"),
progressBar = FALSE,
parse_type = "CSV")
filePath = "D:/D_documents/MOOC/Future Learn/Data - Statistical Inference and Machine Learning/bank_customer_data.csv"
market_data <- h2o.uploadFile(filePath,
destination_frame = "",
parse = T,
header = T,
sep = ",",
na.strings = c("unknown"),
progressBar = FALSE,
parse_type = "CSV")
filePath = "D:/D_documents/MOOC/Future Learn/`Data - Statistical Inference and Machine Learning`/bank_customer_data.csv"
market_data <- h2o.uploadFile(filePath,
destination_frame = "",
parse = T,
header = T,
sep = ",",
na.strings = c("unknown"),
progressBar = FALSE,
parse_type = "CSV")
filePath = "~/FLbigdataStats/bank_customer_data.csv"
market_data <- h2o.uploadFile(filePath,
destination_frame = "",
parse = T,
header = T,
sep = ",",
na.strings = c("unknown"),
progressBar = FALSE,
parse_type = "CSV")
filePath = "D:/D_documents/R/FLbigdataStats/bank_customer_data.csv"
market_data <- h2o.uploadFile(filePath,
destination_frame = "",
parse = T,
header = T,
sep = ",",
na.strings = c("unknown"),
progressBar = FALSE,
parse_type = "CSV")
market_data
summary(market_data)
sample_frame <- h2o.splitFrame(market_data, ratio = 0.2)[[1]]
market_data_sample <- as.data.frame(sample_frame)
market_data_sample
by_y_job <- market_data_sample %>% group_by(y, job) %>% tally()
by_y_job
ggplot(data = by_y_job, aes(x = job, y = n, fill = y)) +
geom_bar(stat = "identity", position = "dodge")
